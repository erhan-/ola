shallow_clone: true

environment:
  matrix:
    - Build: mingw

install:
  - set PATH=%PATH%;C:\MinGW\bin;C:\MinGW\msys\1.0\bin
  #- dir C:\MinGW\msys\1.0\bin
  #These are already installed: mingw32-base msys-coreutils msys-wget
  - mingw-get.exe install mingw32-pthreads-w32
  - choco install pkgconfiglite
  - nuget install protobuf
  - ps: |
      # Remove path to Git bin directory from PATH because it breaks MinGW config.
      $env:PATH = $env:PATH -replace "C:\\Program Files \(x86\)\\Git\\bin",""
      $env:PATH = $env:PATH -replace "C:\\Program Files\\Git\\bin",""
  - sh: sh mount C:\MinGW /mingw
  - IF not exist ..\libs ( mkdir ..\libs )
  - cd ..\libs
  - dir
  # uuid
  - IF not exist uuid-1.6.2.tar.gz ( echo No cache, downloading && appveyor DownloadFile https://gnome-build-stage-1.googlecode.com/files/uuid-1.6.2.tar.gz ) ELSE ( echo Using cached download )
  - IF not exist uuid-1.6.2 ( echo No folder, extracting && tar -zxvf uuid-1.6.2.tar.gz ) ELSE ( echo Using cached folder )
  - cd uuid-1.6.2
  - IF not exist Makefile ( echo No Makefile, configuring && sh ./configure ) ELSE ( echo Makefile already exists, not bothering to configure )
  - C:\MinGW\msys\1.0\bin\make.exe
  ## Hack to work around shtool on Windows not quoting enough
  - C:\MinGW\msys\1.0\bin\make.exe install || true
  # Check it installed correctly/see if we can find it, it should be in /usr/local/lib/pkgconfig/
  - export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
  - pkg-config --exists --print-errors "ossp-uuid"
  #- pkg-config --exists --print-errors "uuid"
  ## protobuf
  #- cd ..
  ## The tar doesn't extract properly, so grab the zip and use 7z
  #- IF not exist protobuf-2.6.1.zip ( echo No cache, downloading && appveyor DownloadFile https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.zip ) ELSE ( echo Using cached download )
  #- IF not exist protobuf-2.6.1 ( echo No folder, extracting && 7z x protobuf-2.6.1.zip ) ELSE ( echo Using cached folder )
  #- dir
  #- cd protobuf-2.6.1
  ##- IF not exist Makefile ( echo No Makefile, configuring and making && sh ./configure && C:\MinGW\msys\1.0\bin\make.exe ) ELSE ( echo Makefile already exists, not bothering to configure or make )
  #- sh ./configure
  #- C:\MinGW\msys\1.0\bin\make.exe
  #- C:\MinGW\msys\1.0\bin\make.exe install
  # cppunit
  - cd ..
  - IF not exist cppunit-1.12.1.tar.gz ( echo No cache, downloading && appveyor DownloadFile http://downloads.sourceforge.net/project/cppunit/cppunit/1.12.1/cppunit-1.12.1.tar.gz ) ELSE ( echo Using cached download )
  - IF not exist cppunit-1.12.1 ( echo No folder, extracting && tar -zxvf cppunit-1.12.1.tar.gz ) ELSE ( echo Using cached folder )
  - cd cppunit-1.12.1
  - IF not exist Makefile ( echo No Makefile, configuring && sh ./configure ) ELSE ( echo Makefile already exists, not bothering to configure )
  - C:\MinGW\msys\1.0\bin\make.exe
  - C:\MinGW\msys\1.0\bin\make.exe install
  # libmicrohttpd
  - cd ..
  - IF not exist libmicrohttpd-0.9.38.tar.gz ( echo No cache, downloading && appveyor DownloadFile http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.38.tar.gz ) ELSE ( echo Using cached download )
  - IF not exist libmicrohttpd-0.9.38 ( echo No folder, extracting && tar -zxvf libmicrohttpd-0.9.38.tar.gz ) ELSE ( echo Using cached folder )
  - dir
  - cd libmicrohttpd-0.9.38
  - IF not exist Makefile ( echo No Makefile, configuring && sh ./configure ) ELSE ( echo Makefile already exists, not bothering to configure )
  ##- C:\MinGW\msys\1.0\bin\make.exe
  ##- C:\MinGW\msys\1.0\bin\make.exe install
  # liblo
  - cd ..
  - IF not exist liblo-0.28.tar.gz ( echo No cache, downloading && appveyor DownloadFile http://downloads.sourceforge.net/project/liblo/liblo/0.28/liblo-0.28.tar.gz ) ELSE ( echo Using cached download )
  - IF not exist liblo-0.28 ( echo No folder, extracting && tar -zxvf liblo-0.28.tar.gz ) ELSE ( echo Using cached folder )
  - cd liblo-0.28
  - IF not exist Makefile ( echo No Makefile, configuring && sh ./configure ) ELSE ( echo Makefile already exists, not bothering to configure )
  - C:\MinGW\msys\1.0\bin\make.exe
  - C:\MinGW\msys\1.0\bin\make.exe install
  # All done, get back to the right place
  - cd ../../ola

before_build:
  - CPPFLAGS="-I/usr/local/include"
  - LDFLAGS="-L/usr/local/lib"
  - export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

build_script:
  - echo %PATH%
  - sh C:\MinGW\bin\autoreconf -i -f
  - sh ./configure --enable-python-libs --disable-all-plugins --enable-artnet --enable-dummy --enable-espnet --enable-kinet --enable-opendmx --enable-osc --enable-pathport --enable-sandnet --enable-shownet
  - C:\MinGW\msys\1.0\bin\make.exe

test_script:
  #- C:\MinGW\msys\1.0\bin\make.exe check

on_failure:
  - appveyor PushArtifact config.log
  - appveyor PushArtifact test-suite.log
  - appveyor PushArtifact src/test-suite.log
  #- appveyor AddTest test

cache:
  - C:\projects\libs\uuid-1.6.2.tar.gz
  - C:\projects\libs\protobuf-2.6.1.zip
  - C:\projects\libs\cppunit-1.12.1.tar.gz
  - C:\projects\libs\libmicrohttpd-0.9.38.tar.gz
  - C:\projects\libs\liblo-0.28.tar.gz
  - C:\projects\libs\uuid-1.6.2
  #- C:\projects\libs\protobuf-2.6.1
  - C:\projects\libs\cppunit-1.12.1
  - C:\projects\libs\libmicrohttpd-0.9.38
  - C:\projects\libs\liblo-0.28
